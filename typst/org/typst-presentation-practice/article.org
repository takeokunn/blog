:PROPERTIES:
:ID:       TYPST-PRACTICE-SLIDES
:END:
#+TITLE: typstで登壇できるようになったので練習させてくれ
#+AUTHOR: takeokunn
#+STARTUP: fold
#+TYPST_SETUP: #import "./dracula.typ": *
#+TYPST_SETUP: #show: doc => setup(footer: "takeokunn - typstで登壇できるようになったので練習させてくれ", doc)

* 【表紙】
#+begin_export typst
#slide[
  #set page(header: none, footer: none, margin: 3em) // Override theme for title slide
  #align(center)[
    #text(size: 22pt, weight: "bold")[typstで登壇できるようになったので練習させてくれ]
    #v(2em)
    #text(size: 16pt)[takeokunn]
    #v(1em)
    #text(size: 14pt)[このスライドもTypstで作りました！]
  ]
  #speaker-note[
    タイトルスライドです。
    発表者名と、このスライドがTypstで作成されたことをアピールします。
  ]
]
#+end_export

* 起：なぜTypstで登壇したかったのか？
#+begin_export typst
#new-section[起：なぜTypstで登壇したかったのか？]
#+end_export

** スライド1：はじめに
#+begin_export typst
#slide[
  == はじめに

  - 自己紹介
  - これまでの発表資料作成の悩み
    - PowerPoint/Keynote：バージョン管理しにくい、数式が書きづらい
    - Marp/Reveal.js：環境構築が少し手間、デザインのカスタマイズに限界を感じる
  - #strong[→ 「もっと楽に、綺麗で、管理しやすいスライドを作りたい！」]

  #speaker-note[
    自己紹介（名前、所属など）。
    これまでの発表資料作成で感じていた具体的な課題を共有。
    聴衆の共感を得やすいポイントを強調する。
    (約1分)
  ]
]
#+end_export

** スライド2：Typstとの出会い
#+begin_export typst
#slide[
  == Typstとの出会い

  - テキストベースで書ける組版システム「Typst」を発見
  - 魅力に感じた点：
    - シンプルな記法
    - 数式や図の描画が強力
    - 再現性の高い環境を構築できそう（→ #strong[Nix]との出会いへ）
  - #strong[ゴール設定：] Typstで開発ドキュメントを書くだけでなく、#strong[登壇スライドも作れる環境]を整えたい！

  #speaker-note[
    Typstを知ったきっかけ。
    特に魅力に感じた点を具体的に説明。
    Nixとの連携に触れることで、技術的な関心を引く。
  ]
]
#+end_export

* 承：理想の環境へ！テーマ自作と環境構築
#+begin_export typst
#new-section[承：理想の環境へ！テーマ自作と環境構築]
#+end_export

** スライド3：環境構築の自動化 (参照記事4)
#+begin_export typst
#slide[
  == 環境構築の自動化

  - #strong[課題：] どこでも同じ環境でTypstをビルドしたい
  - #strong[解決策：] #strong[Nix Flakes]でTypstのビルド環境を定義
  - #strong[自動化：] GitHub Actionsでビルドし、GitHub PagesでPDFをホスティング
  - #strong[成果：] #code(body="git push")するだけでスライドが公開される仕組みが完成！

  #speaker-note[
    Nix Flakesを使った環境構築のメリットを説明。
    GitHub ActionsによるCI/CDの便利さをアピール。
    参照記事4への言及（口頭または注釈で）。
    (約1.5分)
  ]
]
#+end_export

** スライド4：見た目へのこだわり (参照記事3)
#+begin_export typst
#slide[
  == 見た目へのこだわり

  - #strong[課題：] 既存のテーマでは満足できない。自分だけのデザインが欲しい！
  - #strong[解決策：] #code(body="polylux")をベースに#strong[Typstテーマを自作]
  - こだわった点：
    - ライト/ダークテーマの切り替え
    - ソースコードのシンタックスハイライト (#code(body="codelst") + Draculaテーマ)
    - ヘッダー、フッター、ページ番号などのレイアウト調整

  #speaker-note[
    自作テーマのモチベーション。
    こだわったデザインポイントを具体的に紹介。
    codelstとDraculaテーマについても触れる。
    参照記事3への言及。
  ]
]
#+end_export

** スライド5：自作テーマでスライド作成 (参照記事2)
#+begin_export typst
#slide[
  == 自作テーマでスライド作成

  - 実際に自作したテーマを使って登壇スライドを作成した事例を紹介
  - （ここでNix Meetupのスライドなどを例として1枚見せる）
    #figure(
      image("images/placeholder-nix-meetup-slide.png", width: 70%), // Placeholder
      caption: [Nix Meetup発表スライド（イメージ）]
    )
  - #strong[課題の表面化：] 「スライドはできた。でも、これでどうやって登壇するんだ…？」

  #speaker-note[
    自作テーマを使用した実際の成果物を見せる（画像やデモ）。
    具体的な課題感を提示し、次の展開への期待感を高める。
    参照記事2への言及。
    (注： images/placeholder-nix-meetup-slide.png は適切な画像に置き換えてください)
  ]
]
#+end_export

* 転：最後のピースは「発表者ツール」
#+begin_export typst
#new-section[転：最後のピースは「発表者ツール」]
#+end_export

** スライド6：登壇における「最後の壁」
#+begin_export typst
#slide[
  == 登壇における「最後の壁」

  - ただPDFを全画面表示するだけでは、発表者としては機能不足
  - 求めていた機能：
    - #strong[スピーカーノート（カンペ）]を手元で見たい
    - #strong[次のスライド]を確認したい
    - #strong[経過時間]を把握したい

  #speaker-note[
    発表者ツールがない場合の不便さを具体的に説明。
    聴衆にも共感できる「あるある」な悩みを提示する。
    (約1.5分)
  ]
]
#+end_export

** スライド7：救世主「pdfpc」 (参照記事1)
#+begin_export typst
#slide[
  == 救世主「pdfpc」

  - PDFプレゼンテーションコンソール#strong[#code(body="pdfpc")]を発見
  - Typstのノート機能を#code(body="pdfpc")形式に変換する#code(body="polylux2pdfpc")を利用
  - #strong[コマンド一発]で、Typstファイルから発表者ツール対応のファイルが生成可能に！
  #sourcecode(lang: "bash")[
    $ typst compile foo.typ
    $ polylux2pdfpc foo.typ
  ]

  #speaker-note[
    pdfpcの導入経緯と、polylux2pdfpcの役割を説明。
    コマンド実行のシンプルさを強調。
    参照記事1への言及。
  ]
]
#+end_export

** スライド8：ついに登壇できる環境が整った！
#+begin_export typst
#slide[
  == ついに登壇できる環境が整った！

  - （実際のpdfpcの画面キャプチャを見せる）
    #figure(
      image("images/placeholder-pdfpc-screenshot.png", width: 80%), // Placeholder
      caption: [pdfpc利用時の画面構成（イメージ）]
    )
  - 手元のPCには「現在のスライド、次のスライド、ノート、タイマー」
  - プロジェクターには「現在のスライドのみ」
  - #strong[→ これで安心して登壇できる！]

  #speaker-note[
    pdfpcの実際の画面構成（スクリーンショットやデモ）を見せる。
    これにより得られる安心感やメリットを伝える。
    (注： images/placeholder-pdfpc-screenshot.png は適切な画像に置き換えてください)
  ]
]
#+end_export

* 結：まとめと今後の展望
#+begin_export typst
#new-section[結：まとめと今後の展望]
#+end_export

** スライド9：本日のまとめ
#+begin_export typst
#slide[
  == 本日のまとめ

  - #strong[起：] テキストベースで綺麗なスライドを作りたかった
  - #strong[承：] Nixで環境を固め、自作テーマでデザインを追求した
  - #strong[転：] #code(body="pdfpc")で発表者ツールの壁を乗り越えた
  - #strong[結：] #strong[Typstで最高の登壇環境が完成！]

  #speaker-note[
    起承転結でストーリーを振り返る。
    各フェーズでのキーポイントを簡潔にまとめる。
    (約1分)
  ]
]
#+end_export

** スライド10：結論
#+begin_export typst
#slide[
  == 結論

  - Typstはいいぞ！
    - テキストベースでGit管理可能
    - Nixで再現性もばっちり
    - テーマ自作でデザイン自由自在
    - pdfpcを使えば本格的な登壇も可能！
  - 今日はその練習ができて感無量です。
  - ご清聴ありがとうございました！

  #speaker-note[
    Typstのメリットを改めて強調。
    聴衆への感謝を述べる。
    質疑応答へスムーズに移行する。
  ]
]
#+end_export

* ご静聴ありがとうございました
#+begin_export typst
#slide[
  #show: focus
  ご静聴ありがとうございました
]
#+end_export
