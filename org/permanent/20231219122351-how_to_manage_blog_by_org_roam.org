:PROPERTIES:
:ID:       E6243AE2-CFE4-4D21-B9B7-E076B13CF486
:mtime:    20231221225345
:ctime:    20231219122351
:END:
#+TITLE: org-roamで記事を管理しGitHub Actionsで適切にPublishする
#+AUTHOR: takeokunn
#+DESCRIPTION: description
#+DATE: 2023-12-19T12:31:50+0900
#+HUGO_BASE_DIR: ../../
#+HUGO_CATEGORIES: permanent
#+HUGO_SECTION: posts/permanent
#+HUGO_TAGS: emacs org-roam
#+HUGO_DRAFT: true
#+STARTUP: content
#+STARTUP: nohideblocks
* Introduction

2023念度Emacsアドベントカレンダーn日目です。
当記事ではorg-roamを用いたブログ記事のコンテンツ管理方法と、ZennやHugoへ公開する方法の一連の流れについて解説しています。

個々の技術への深堀は必要に応じて別途記事に認めますのでご了承ください。

* 考え方
** ブログサービスについて

ZennやQiitaなどブログサービスを提供している会社は世の中に無数にありますが、「ブログ記事という形式で世の中に公開する」ということには大きく分けて以下の2つの要素があります。

- 記事管理
- 記事公開

2000年代初期と2023年現在求められているブログサービスの必要条件は異なるように、年々求められる必要条件は増えています。
2023年においてSNSに投稿したものを埋め込むことができないブログサービスというのはほぼ存在しないように、有名なブログサービスに乗っかっておけばモダンな環境を常に享受し続けることができます。

しかしながら、ブログサービスにも当然栄枯盛衰があり自分が使っているサービスの行く末など個人には分かりようがありません。
現に私がプログラミングを初めた2014年ごろはQiitaが技術系ブログサービス一強だったが、2023年現在ではZennが主流になっています。
より良いブログサービスが出たら移動することも念頭に置く必要が常にあります。

私が勤めている会社では多少技術的な記事でも広報目的にnoteに書くという運用がされていたり、以前所属していた会社では、はてなブログで技術ブログを運用していました。
ソフトウェアエンジニアをしていく以上「どこに対して記事公開するか」というのは自分ではコントロール効かないという前提があります。

上記で述べたように「記事公開」に関しては自分でどうしようもない部分が多々ありますが、「記事管理」に関しては完全に自分でコントロールを効かせることができます。
適切なフォーマットで公開すれば良いだけですので、どのように記事を管理されようとブログサービスからしたらDBのレコードの1つなだけなでどうでも良いことなのです。

** ソフトウェアエンジニアとして

ソフトウェアエンジニアにとって「技術的な文書を書く」という営みは避けられません。
「ドキュメントを書く」「チケットに証跡を書く」「同僚と技術的やりとりをする」等さまざまありますが、「ブログ記事を書く」という行為もそのひとつです。
特定の技術は廃れようと、20年後30年後も「技術的な文書を書く」という営みがなくなることはないと私は考えています。

私は残念ながらソフトウェアエンジニア以外の仕事が絶望的に苦手ですので、20年後もソフトウェアエンジニアとして働いているでしょう。
私はあまり文章を書くのが得意ではないので、いかに低負荷で一定の品質の文書を書く環境を用意するか、というのが自分のソフトウェアエンジニアとしての人生にとって重要なことだと考えてます。

** すべてをEmacsに最適化する
* 要件
* 全体の流れ
* 記事管理
** org-roam
** yasnippet
** .dir-locals2.el
** textlint
** secretlint
* Publish
** Hugo
*** Hosting
*** Theme
*** Backlink
*** OGP
** Zenn
*** ox-zenn
*** GitHub連携
* 今後の展望
