:PROPERTIES:
:ID:       36895B8F-290A-49B2-96A3-FA60623541AA
:END:
#+TITLE: flake.nixでポータブルな最小構成のEmacsを作成する
#+AUTHOR: takeokunn
#+DESCRIPTION: description
#+DATE: 2025-04-03T23:07:14+0900
#+HUGO_BASE_DIR: ../../
#+HUGO_CATEGORIES: fleeting
#+HUGO_SECTION: posts/fleeting
#+HUGO_TAGS: fleeting emacs nix
#+HUGO_DRAFT: false
#+STARTUP: content
#+STARTUP: fold
* Introduction

「任意のEmacs Packageが動かない」がおま環かバグかというのを切り分けることは非常に重要。
誰でも同じ環境を整えられるようにすると問題解決が捗るので構築方法をメモしておく。

* 作業手順
** 1. プロジェクト作成

=flake.nix= がGitで認識されていないと実行できないので雑にGit Projectを作る。

#+begin_src console
  $ mkdir -p ~/path/to/dir/minimum-emacs
  $ cd ~/path/to/dir/minimum-emacs
  $ touch flake.nix
  $ touch init.el
  $ git init && git add .
#+end_src
** 2. init.el作成

今回のサンプルは[[https://melpa.org/#/rainbow-delimiters][rainbow-delimiters]]が動作するか確認するものにする。

#+begin_src emacs-lisp
  (use-package rainbow-delimiters
    :hook
    (prog-mode-hook . rainbow-delimiters-mode))
#+end_src
** 3. flake.nix作成

=alwaysEnsure = true;= にすると =init.el= 内の =:ensure t= を読んでNix Build時によしなにインストールしてくれる。

また、[[https://github.com/nix-community/emacs-overlay][emacs-overlay]] を使うと =unstable/stable/head= など複数バージョンで実行できるので検証の幅を簡単に広げられる。
https://github.com/nix-community/emacs-overlay/blob/master/overlays/emacs.nix

#+begin_src nix
  {
    inputs = {
      nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
      emacs-overlay = {
        url = "github:nix-community/emacs-overlay";
        inputs.nixpkgs.follows = "nixpkgs";
      };
    };

    outputs = { self, nixpkgs, emacs-overlay }:
      let
        system = "aarch64-darwin";
        pkgs = import nixpkgs {
          inherit system;
          overlays = [ emacs-overlay.overlay ];
        };
        emacs = pkgs.emacsWithPackagesFromUsePackage {
          config = ./init.el;
          package = pkgs.emacs-unstable;
          alwaysEnsure = true;
        };
      in
        {
          packages.${system}.default = emacs;
        };
  }
#+end_src
** 4. Nix Buildして実行

Localに一切依存しない形でEmacsをBuildできる。

#+begin_src console
  $ nix build .#default
  $ ./result/bin/emacs -nw -Q
#+end_src
* 終わりに
「最小構成を作ってください」の正解はflake.nixだと思っている。
