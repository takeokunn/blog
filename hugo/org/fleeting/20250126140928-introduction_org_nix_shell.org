:PROPERTIES:
:ID:       8D7E7EC3-12EE-49DF-9134-8BFA085CC11D
:END:
#+TITLE: org-nix-shell入門
#+AUTHOR: takeokunn
#+DESCRIPTION: description
#+DATE: 2025-02-08T11:00:00+0900
#+HUGO_BASE_DIR: ../../
#+HUGO_CATEGORIES: fleeting
#+HUGO_SECTION: posts/fleeting
#+HUGO_TAGS: fleeting nix
#+HUGO_DRAFT: false
#+STARTUP: fold
* Introduction

org-nix-shellはOrg関連パッケージの中でもキラーアプリケーションと呼べるもので、個人的に今熱いパッケージのひとつです。
簡単な使い方と実際のユースケースを紹介していきます。

* インストール

- GitHub: https://github.com/AntonHakansson/org-nix-shell/blob/main/README.org
- melpa: https://melpa.org/#/org-nix-shell

Melpa経由で入れてもよいし、GitHub経由で直接インストールしてもよい。
次のように設定するだけで機能してくれる。

#+begin_src emacs-lisp
  (require 'org-nix-shell)

  (with-eval-after-load 'org
    (add-hook 'org-mode-hook #'org-nix-shell-mode))
#+end_src
* 使い方
** Basic

次のようにNixを定義して =:nix-shell= で読み込む。

#+begin_src org
  ,#+name: tmp-shell
  ,#+BEGIN_SRC nix :noweb yes
    { pkgs ? import <nixpkgs> { } }:
    pkgs.mkShell { buildInputs = with pkgs; [ php ]; }
    ,#+END_SRC

  ,#+begin_src shell :nix-shell tmp-shell :results output
    php --version
  ,#+end_src
#+end_src

また、次のURLから古いバージョンを取ってきて実行することも可能。
https://lazamar.co.uk/nix-versions

#+begin_src org
  ,#+name: php74-shell
  ,#+BEGIN_SRC nix :noweb yes
    let
      url =
        "https://github.com/NixOS/nixpkgs/archive/4426104c8c900fbe048c33a0e6f68a006235ac50.tar.gz";
      pkgs = import (builtins.fetchTarball { inherit url; }) {
        system = "<<wandbox-system>>";
      };
    in pkgs.mkShell { buildInputs = with pkgs; [ php74 ]; }
  ,#+END_SRC

  ,#+begin_src php :nix-shell php74-shell :exports both
    echo phpversion();
  ,#+end_src

  ,#+RESULTS:
  : 7.4.4
#+end_src

property指定もできる。

Buffer Scope:

#+begin_src org
  ,#+property: header-args: :nix-shell <name>
#+end_src

Subtree Scope:

#+begin_src org
  ,* sample header
    :PROPERTIES:
    :header-args: :nix-shell <name>
    :END:
#+end_src
** Adviced

複数の処理系を定義しておけば、wandboxのようなことも実現可能になる。
https://github.com/takeokunn/blog/blob/main/static/snippets/wandbox.org

* 所感
必要なものを明示的にインストールして実行できるのでポータビリティが非常に高い。
ブログや運用手順書との相性が非常に良く、文芸的プログラミングのレベルをひとつ上にレベルアップすることが可能になった。
