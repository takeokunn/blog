:PROPERTIES:
:ID:       7081F597-ED52-4BA5-8854-3A6C14FD58DE
:END:
#+TITLE: @github/copilot-language-serverをNixで扱う時のメモ
#+AUTHOR: takeokunn
#+DESCRIPTION: description
#+DATE: 2025-02-27T21:37:32+0900
#+HUGO_BASE_DIR: ../../
#+HUGO_CATEGORIES: fleeting
#+HUGO_SECTION: posts/fleeting
#+HUGO_TAGS: fleeting emacs nix
#+HUGO_DRAFT: false
#+STARTUP: fold
* Introduction

[[https://github.com/orgs/github/packages/npm/package/copilot-language-server][@github/copilot-language-server]] を [[https://github.com/takeokunn/nixos-configuration][takeokunn/nixos-configuration]] 上で扱えるようにしたのでメモしておく。

* Background

- [[https://github.com/copilot-emacs/copilot.el][copilot.el]] のバージョンが上がった
- [[https://github.com/orgs/github/packages/npm/package/copilot-language-server][@github/copilot-language-server]] をnpmでインストールして使う必要があった
- 次の要件を満たしたい
  - Nixでパッケージングしたい
  - Neovimなどのエディタでも汎用的に使えるようにしたい

* 対応手順
** 1. node2nixでパッケージングする

=node2nix/node-packages.json= に次のような記述をした。

#+begin_src json
  ["@github/copilot-language-server"]
#+end_src


次のshell scriptを実行するとファイルが生成された。

- =node2nix/default.nix=
- =node2nix/node-env.nix=
- =node2nix/node-packages.nix=

#+begin_src console
  $ nix-shell -p nodePackages.node2nix --command "node2nix -i ./node-packages.json -o node-packages.nix"
#+end_src
** 2. 実行ファイルを取得する

=node2nix/default.nix= をimportするとpackageが読み込めるようになった。

#+begin_src nix
  nodePkgs = pkgs.callPackage ../node2nix { inherit pkgs; };
#+end_src


copilot-language-server は次のようなディレクトリ構造になっている。

#+begin_src console
  $ dust native/

   65M ├─┬ native/darwin-x64
   65M │ └── native/darwin-x64/copilot-language-server
   60M ├─┬ native/darwin-arm64
   60M │ └── native/darwin-arm64/copilot-language-server
   59M ├─┬ native/linux-x64
   59M │ └── native/linux-x64/copilot-language-server
   50M └─┬ native/win32-x64
   50M   └── native/win32-x64/copilot-language-server.exe
#+end_src

そこで、platformごとに対応表を作って =COPILOT_LANGUAGE_SERVER_PATH= にPATHを通してあげた。

#+begin_src nix
  { pkgs, nodePkgs }:
  let
    platforms = {
      "x86_64-linux" = "linux-amd64";
      "aarch64-linux" = "linux-aarch64";
      "x86_64-darwin" = "darwin-amd64";
      "aarch64-darwin" = "darwin-arm64";
    };
    platform = builtins.getAttr pkgs.system platforms;
  in
  {
    home.packages = [ nodePkgs."@github/copilot-language-server" ];

    programs.fish = {
      interactiveShellInit = ''
        set -gx COPILOT_LANGUAGE_SERVER_PATH ${
          nodePkgs."@github/copilot-language-server"
        }/lib/node_modules/@github/copilot-language-server/native/${platform}/copilot-language-server
      '';
    };
  }
#+end_src

=2025/03/27(Mon)= 現在、次のような環境変数が定義されている。

#+begin_src console
  $ echo $COPILOT_LANGUAGE_SERVER_PATH
  /nix/store/314dbj3vqb5s0f37gszm948arm37layx-_at_github_slash_copilot-language-server-1.291.0/lib/node_modules/@github/copilot-language-server/native/darwin-arm64/copilot-language-server
#+end_src
** 3. copilot.elにPATHを通す

=exec-path-from-shell=:

#+begin_src emacs-lisp
  (setopt exec-path-from-shell-variables '("PATH" "TERM" "SSH_AUTH_SOCK" "COPILOT_LANGUAGE_SERVER_PATH"))
#+end_src

=copilot.el=:

#+begin_src emacs-lisp
  (setopt copilot-server-executable (getenv "COPILOT_LANGUAGE_SERVER_PATH"))
#+end_src

* 終わりに
問題なく使えるようになってうれしい。今後ともcopilotを使い倒していきたい。
