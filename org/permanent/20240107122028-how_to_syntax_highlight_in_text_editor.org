:PROPERTIES:
:ID:       3249F27E-9CE1-4ADC-9B34-607C7DCEC60D
:END:
#+TITLE: テキストエディタがPHPをシンタックスハイライトする仕組みとモダンテキストエディタ事情について
#+AUTHOR: takeokunn
#+DESCRIPTION: description
#+DATE: 2024-01-07T12:20:39+0900
#+HUGO_BASE_DIR: ../../
#+HUGO_CATEGORIES: permanent
#+HUGO_SECTION: posts/permanent
#+HUGO_TAGS: fleeting
#+HUGO_DRAFT: true
#+STARTUP: content
#+STARTUP: nohideblocks
* 注意

この記事はPHPerKaigi 2024のパンフレット記事です。
書面での掲載につきハイパーリンクがないことをご了承ください。

https://fortee.jp/phperkaigi-2024/proposal/161b2ec9-c279-4336-8e17-1aa054dacae9

* Introduction

- ソフトウェアは日進月歩で進化し続けている
- プログラミング言語の進化に追従するようにテキストエディタも進化している
  - php8.0以降に追加されたmatch式やenum構文なども問題なくハイライトしてくれている
- OSSだろうと商用だろうと誰かが対応してくれているので成り立っている
- そもそもテキストエディタはどのように構文を解釈してハイライトしてくれているのか、tree-sitterなどの最近のテキストエディタ事情も踏まえて解説する
- 筆者は熱狂的なEmacsユーザでありPHP Pluginであるphp-modeのメンテナでもあるので、Emacs贔屓な解説になってしまうのはご了承いただきたい

* シンタックスハイライトとは

- シンタックスハイライトとは
  - 構文に色をつけてくれるもの
    - 変数やnewのようなキーワード、functionやclassなど
  - Wikipediaによるとシンタックスカラーリング・構文着色とも言うらしい
- メリット
  - テキストの可読性を向上させ文脈をより明瞭にする
  - 記述ミスや括弧の対応のミスなどを防ぐことができる
- デメリット
  - 流し読みがしやすくなるので、プログラマはコード全体を理解しようとはしなくなる(by wikipedia)
- カラーテーマごとに配色が違う
  - 世の中には無数のカラーテーマがある
  - 筆者はDraculaやSublime Textのdefault themeのmonokaiが好き
- 言語の数だけシンタックスハイライトがある
  - 言語ごとに構文が違う
  - 似ている言語は上書きするように記述している
    - PHPはC言語に似ている
    - 昔php-modeはjava-modeを継承して実装していた

* シンタックスハイライトの大まかな仕組み

- テキストエディタによって実装が違う
- 凡そ2つに大別できる
  - 正規表現ベース
  - ASTベース
- 正規表現ベースは古いテキストエディタでよく使われている
  - EmacsやVimはそう
  - それぞれのテキストエディタごとに実装されている
- ASTベースは比較的新しいテキストエディタで実装されている
  - 今は亡きAtomが発祥
  - VSCodeがそう
  - NeoVimやEmacsは最近本体に組込まれた
- ASTベースのツールはほぼTree-Sitterが一強
  - Rust製で非常に高速で挙動する
  - テキストエディタに依存しない形で実装されている
- 難しいところ
  - 常にユーザが入力し続けるので構文が確定しない
  - 1入力ごとにハイライトする必要がある
    - 高速で動かす必要がある

* 正規表現によるシンタックスハイライト

- 伝統的なテキストエディタで実装されている
- キーワードは直接色を付ける
- 正規表現によって構文を定義する
- メリット
  - 高速で動く
- デメリット
  - 正規表現

* ASTベースによるシンタックスハイライト
